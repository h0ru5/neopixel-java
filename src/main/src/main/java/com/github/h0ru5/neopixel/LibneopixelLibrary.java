package com.github.h0ru5.neopixel;
import com.sun.jna.Library;
import com.sun.jna.Native;
import com.sun.jna.NativeLibrary;
import com.sun.jna.Pointer;
import com.sun.jna.PointerType;
/**
 * JNA Wrapper for library <b>libneopixel</b><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public interface LibneopixelLibrary extends Library {
	public static final String JNA_LIBRARY_NAME = "rpi_ws281x";
	public static final NativeLibrary JNA_NATIVE_LIB = NativeLibrary.getInstance(LibneopixelLibrary.JNA_LIBRARY_NAME);
	public static final LibneopixelLibrary INSTANCE = (LibneopixelLibrary)Native.loadLibrary(LibneopixelLibrary.JNA_LIBRARY_NAME, LibneopixelLibrary.class);
	/** <i>native declaration : rpi_ws281x\dma.h</i> */
	public static final int RPI_DMA_CS_WAIT_OUTSTANDING_WRITES = (int)(1 << 28);
	/** <i>native declaration : rpi_ws281x\pwm.h</i> */
	public static final int RPI_PWM_STA_GAP02 = (int)(1 << 5);
	/** <i>native declaration : rpi_ws281x\pwm.h</i> */
	public static final int RPI_PWM_STA_GAP03 = (int)(1 << 6);
	/** <i>native declaration : rpi_ws281x\pwm.h</i> */
	public static final int RPI_PWM_CTL_SBIT1 = (int)(1 << 3);
	/** <i>native declaration : rpi_ws281x\pwm.h</i> */
	public static final int RPI_PWM_STA_GAP04 = (int)(1 << 7);
	/** <i>native declaration : rpi_ws281x\pwm.h</i> */
	public static final int RPI_PWM_CTL_SBIT2 = (int)(1 << 11);
	/** <i>native declaration : rpi_ws281x\pwm.h</i> */
	public static final int RPI_PWM_CTL_RPTL1 = (int)(1 << 2);
	/** <i>native declaration : rpi_ws281x\ws2811.h</i> */
	public static final int WS2811_TARGET_FREQ = (int)800000;
	/** <i>native declaration : rpi_ws281x\dma.h</i> */
	public static final int RPI_DMA_CS_WAITING_OUTSTANDING_WRITES = (int)(1 << 6);
	/** <i>native declaration : rpi_ws281x\dma.h</i> */
	public static final int RPI_DMA_TI_SRC_INC = (int)(1 << 8);
	/** <i>native declaration : rpi_ws281x\pwm.h</i> */
	public static final int RPI_PWM_CTL_RPTL2 = (int)(1 << 10);
	/** <i>native declaration : rpi_ws281x\pwm.h</i> */
	public static final int RPI_PWM_STA_GAP01 = (int)(1 << 4);
	/** <i>native declaration : rpi_ws281x\dma.h</i> */
	public static final int RPI_DMA_CS_ACTIVE = (int)(1 << 0);
	/** <i>native declaration : rpi_ws281x\pwm.h</i> */
	public static final int RPI_PWM_STA_RERR1 = (int)(1 << 3);
	/** <i>native declaration : rpi_ws281x\dma.h</i> */
	public static final int RPI_DMA_TI_INTEN = (int)(1 << 0);
	/** <i>native declaration : rpi_ws281x\dma.h</i> */
	public static final int DMA10 = (int)(0x20007a00);
	/** <i>native declaration : rpi_ws281x\dma.h</i> */
	public static final int DMA13 = (int)(0x20007d00);
	/** <i>native declaration : rpi_ws281x\dma.h</i> */
	public static final int DMA14 = (int)(0x20007e00);
	/** <i>native declaration : rpi_ws281x\dma.h</i> */
	public static final int DMA11 = (int)(0x20007b00);
	/** <i>native declaration : rpi_ws281x\dma.h</i> */
	public static final int PAGE_MASK = (int)(~((1 << 12) - 1));
	/** <i>native declaration : rpi_ws281x\dma.h</i> */
	public static final int RPI_DMA_CS_ERROR = (int)(1 << 8);
	/** <i>native declaration : rpi_ws281x\dma.h</i> */
	public static final int DMA12 = (int)(0x20007c00);
	/** <i>native declaration : rpi_ws281x\dma.h</i> */
	public static final int DMA15 = (int)(0x20e05000);
	/** <i>native declaration : rpi_ws281x\dma.h</i> */
	public static final int RPI_DMA_CS_DREQ_STOPS_DMA = (int)(1 << 5);
	/** <i>native declaration : rpi_ws281x\pwm.h</i> */
	public static final int PWM = (int)(0x2020c000);
	/** <i>native declaration : rpi_ws281x\dma.h</i> */
	public static final int PAGE_SIZE = (int)(1 << 12);
	/** <i>native declaration : rpi_ws281x\dma.h</i> */
	public static final int RPI_DMA_TI_NO_WIDE_BURSTS = (int)(1 << 26);
	/** <i>native declaration : rpi_ws281x\pwm.h</i> */
	public static final int RPI_PWM_STA_BERR = (int)(1 << 8);
	/** <i>native declaration : rpi_ws281x\dma.h</i> */
	public static final int RPI_DMA_TI_SRC_DREQ = (int)(1 << 10);
	/** <i>native declaration : rpi_ws281x\dma.h</i> */
	public static final int DMA8 = (int)(0x20007800);
	/** <i>native declaration : rpi_ws281x\dma.h</i> */
	public static final int DMA9 = (int)(0x20007900);
	/** <i>native declaration : rpi_ws281x\pwm.h</i> */
	public static final int RPI_PWM_STA_STA2 = (int)(1 << 10);
	/** <i>native declaration : rpi_ws281x\pwm.h</i> */
	public static final int RPI_PWM_STA_STA3 = (int)(1 << 11);
	/** <i>native declaration : rpi_ws281x\dma.h</i> */
	public static final int RPI_DMA_TI_DEST_INC = (int)(1 << 4);
	/** <i>native declaration : rpi_ws281x\pwm.h</i> */
	public static final int RPI_PWM_STA_STA1 = (int)(1 << 9);
	/** <i>native declaration : rpi_ws281x\clk.h</i> */
	public static final int CM_PWM_CTL_SRC_PLLA = (int)(4 << 0);
	/** <i>native declaration : rpi_ws281x\pwm.h</i> */
	public static final int RPI_PWM_CHANNELS = (int)2;
	/** <i>native declaration : rpi_ws281x\clk.h</i> */
	public static final int CM_PWM_CTL_SRC_GND = (int)(0 << 0);
	/** <i>native declaration : rpi_ws281x\dma.h</i> */
	public static final int RPI_DMA_TI_DEST_WIDTH = (int)(1 << 5);
	/** <i>native declaration : rpi_ws281x\clk.h</i> */
	public static final int CM_PWM_DIV_PASSWD = (int)(0x5a << 24);
	/** <i>native declaration : rpi_ws281x\pwm.h</i> */
	public static final int RPI_PWM_CTL_POLA2 = (int)(1 << 12);
	/** <i>native declaration : rpi_ws281x\pwm.h</i> */
	public static final int RPI_PWM_CTL_POLA1 = (int)(1 << 4);
	/** <i>native declaration : rpi_ws281x\dma.h</i> */
	public static final int RPI_DMA_CS_ABORT = (int)(1 << 30);
	/** <i>native declaration : rpi_ws281x\pwm.h</i> */
	public static final int RPI_PWM_CTL_MSEN2 = (int)(1 << 15);
	/** <i>native declaration : rpi_ws281x\pwm.h</i> */
	public static final int RPI_PWM_CTL_MSEN1 = (int)(1 << 7);
	/** <i>native declaration : rpi_ws281x\clk.h</i> */
	public static final int CM_PWM = (int)(0x201010a0);
	/** <i>native declaration : rpi_ws281x\pwm.h</i> */
	public static final int RPI_PWM_STA_EMPT1 = (int)(1 << 1);
	/** <i>native declaration : rpi_ws281x\dma.h</i> */
	public static final int DMA0 = (int)(0x20007000);
	/** <i>native declaration : rpi_ws281x\dma.h</i> */
	public static final int DMA1 = (int)(0x20007100);
	/** <i>native declaration : rpi_ws281x\dma.h</i> */
	public static final int DMA2 = (int)(0x20007200);
	/** <i>native declaration : rpi_ws281x\dma.h</i> */
	public static final int DMA3 = (int)(0x20007300);
	/** <i>native declaration : rpi_ws281x\dma.h</i> */
	public static final int DMA4 = (int)(0x20007400);
	/** <i>native declaration : rpi_ws281x\dma.h</i> */
	public static final int DMA5 = (int)(0x20007500);
	/** <i>native declaration : rpi_ws281x\dma.h</i> */
	public static final int DMA6 = (int)(0x20007600);
	/** <i>native declaration : rpi_ws281x\dma.h</i> */
	public static final int DMA7 = (int)(0x20007700);
	/** <i>native declaration : rpi_ws281x\pwm.h</i> */
	public static final int RPI_PWM_CTL_MODE1 = (int)(1 << 1);
	/** <i>native declaration : rpi_ws281x\pwm.h</i> */
	public static final int RPI_PWM_CTL_MODE2 = (int)(1 << 9);
	/** <i>native declaration : rpi_ws281x\clk.h</i> */
	public static final int CM_PWM_CTL_PASSWD = (int)(0x5a << 24);
	/** <i>native declaration : rpi_ws281x\dma.h</i> */
	public static final int RPI_DMA_TI_DEST_IGNORE = (int)(1 << 7);
	/** <i>native declaration : rpi_ws281x\pwm.h</i> */
	public static final int RPI_PWM_CTL_USEF2 = (int)(1 << 13);
	/** <i>native declaration : rpi_ws281x\pwm.h</i> */
	public static final int RPI_PWM_CTL_USEF1 = (int)(1 << 5);
	/** <i>native declaration : rpi_ws281x\clk.h</i> */
	public static final int CM_PWM_CTL_BUSY = (int)(1 << 7);
	/** <i>native declaration : rpi_ws281x\dma.h</i> */
	public static final int RPI_DMA_TI_SRC_IGNORE = (int)(1 << 11);
	/** <i>native declaration : rpi_ws281x\dma.h</i> */
	public static final int RPI_DMA_CS_RESET = (int)(1 << 31);
	/** <i>native declaration : rpi_ws281x\dma.h</i> */
	public static final int RPI_DMA_CS_DREQ = (int)(1 << 3);
	/** <i>native declaration : rpi_ws281x\pwm.h</i> */
	public static final int RPI_PWM_CTL_CLRF1 = (int)(1 << 6);
	/** <i>native declaration : rpi_ws281x\clk.h</i> */
	public static final int CM_PWM_CTL_SRC_PLLC = (int)(5 << 0);
	/** <i>native declaration : rpi_ws281x\clk.h</i> */
	public static final int CM_PWM_CTL_SRC_PLLD = (int)(6 << 0);
	/** <i>native declaration : rpi_ws281x\clk.h</i> */
	public static final int CM_PWM_CTL_SRC_HDMIAUX = (int)(7 << 0);
	/** <i>native declaration : rpi_ws281x\dma.h</i> */
	public static final int RPI_DMA_TI_DEST_DREQ = (int)(1 << 6);
	/** <i>native declaration : rpi_ws281x\pwm.h</i> */
	public static final int RPI_PWM_CTL_PWEN2 = (int)(1 << 8);
	/** <i>native declaration : rpi_ws281x\pwm.h</i> */
	public static final int RPI_PWM_STA_STA4 = (int)(1 << 12);
	/** <i>native declaration : rpi_ws281x\pwm.h</i> */
	public static final int RPI_PWM_CTL_PWEN1 = (int)(1 << 0);
	/** <i>native declaration : rpi_ws281x\clk.h</i> */
	public static final int CM_PWM_CTL_SRC_OSC = (int)(1 << 0);
	/** <i>native declaration : rpi_ws281x\dma.h</i> */
	public static final int RPI_DMA_TI_TDMODE = (int)(1 << 1);
	/** <i>native declaration : rpi_ws281x\dma.h</i> */
	public static final int RPI_DMA_CS_PAUSED = (int)(1 << 4);
	/** <i>native declaration : rpi_ws281x\pwm.h</i> */
	public static final int PWM_PERIPH = (int)(0x7e20c000);
	/** <i>native declaration : rpi_ws281x\clk.h</i> */
	public static final int CM_PWM_CTL_KILL = (int)(1 << 5);
	/** <i>native declaration : rpi_ws281x\pwm.h</i> */
	public static final int RPI_PWM_DMAC_ENAB = (int)(1 << 31);
	/** <i>native declaration : rpi_ws281x\dma.h</i> */
	public static final int RPI_DMA_TI_SRC_WIDTH = (int)(1 << 9);
	/** <i>native declaration : rpi_ws281x\clk.h</i> */
	public static final int CM_PWM_CTL_FLIP = (int)(1 << 8);
	/** <i>native declaration : rpi_ws281x\pwm.h</i> */
	public static final int RPI_PWM_STA_WERR1 = (int)(1 << 2);
	/** <i>native declaration : rpi_ws281x\clk.h</i> */
	public static final int CM_PWM_CTL_SRC_TSTDBG1 = (int)(3 << 0);
	/** <i>native declaration : rpi_ws281x\dma.h</i> */
	public static final int RPI_DMA_CS_DISDEBUG = (int)(1 << 29);
	/** <i>native declaration : rpi_ws281x\pwm.h</i> */
	public static final int RPI_PWM_STA_FULL1 = (int)(1 << 0);
	/** <i>native declaration : rpi_ws281x\dma.h</i> */
	public static final int RPI_DMA_CS_END = (int)(1 << 1);
	/** <i>native declaration : rpi_ws281x\gpio.h</i> */
	public static final int GPIO = (int)(0x20200000);
	/** <i>native declaration : rpi_ws281x\dma.h</i> */
	public static final int RPI_DMA_CS_INT = (int)(1 << 2);
	/** <i>native declaration : rpi_ws281x\clk.h</i> */
	public static final int CM_PWM_CTL_ENAB = (int)(1 << 4);
	/** <i>native declaration : rpi_ws281x\clk.h</i> */
	public static final int CM_PWM_CTL_SRC_TSTDBG0 = (int)(2 << 0);
	/** <i>native declaration : rpi_ws281x\dma.h</i> */
	public static final int RPI_DMA_TI_WAIT_RESP = (int)(1 << 3);
	/**
	 * Original signature : <code>uint32_t dmanum_to_phys(int)</code><br>
	 * <i>native declaration : rpi_ws281x\dma.h:132</i>
	 */
	int dmanum_to_phys(int dmanum);
	/**
	 * Original signature : <code>void dma_page_init(dma_page_t*)</code><br>
	 * <i>native declaration : rpi_ws281x\dma.h:134</i>
	 */
	void dma_page_init(dma_page page);
	/**
	 * Original signature : <code>dma_page_t* dma_page_add(dma_page_t*, void*)</code><br>
	 * <i>native declaration : rpi_ws281x\dma.h:135</i>
	 */
	dma_page dma_page_add(dma_page head, Pointer addr);
	/**
	 * Original signature : <code>void dma_page_remove(dma_page_t*)</code><br>
	 * <i>native declaration : rpi_ws281x\dma.h:136</i>
	 */
	void dma_page_remove(dma_page page);
	/**
	 * Original signature : <code>void dma_page_remove_all(dma_page_t*)</code><br>
	 * <i>native declaration : rpi_ws281x\dma.h:137</i>
	 */
	void dma_page_remove_all(dma_page head);
	/**
	 * Original signature : <code>dma_page_t* dma_page_next(dma_page_t*, dma_page_t*)</code><br>
	 * <i>native declaration : rpi_ws281x\dma.h:138</i>
	 */
	dma_page dma_page_next(dma_page head, dma_page page);
	/**
	 * Original signature : <code>void* dma_alloc(dma_page_t*, uint32_t)</code><br>
	 * <i>native declaration : rpi_ws281x\dma.h:140</i>
	 */
	Pointer dma_alloc(dma_page head, int size);
	/**
	 * Original signature : <code>dma_cb_t* dma_desc_alloc(uint32_t)</code><br>
	 * <i>native declaration : rpi_ws281x\dma.h:141</i>
	 */
	dma_cb_t dma_desc_alloc(int descriptors);
	/**
	 * Original signature : <code>void dma_page_free(void*, const uint32_t)</code><br>
	 * <i>native declaration : rpi_ws281x\dma.h:142</i>
	 */
	void dma_page_free(Pointer buffer, int size);
	/**
	 * Original signature : <code>void gpio_function_set(volatile gpio_t*, uint8_t, uint8_t)</code><br>
	 * <i>native declaration : rpi_ws281x\gpio.h:68</i>
	 */
	void gpio_function_set(gpio_t gpio, byte pin, byte function);
	/**
	 * Original signature : <code>void gpio_level_set(volatile gpio_t*, uint8_t, uint8_t)</code><br>
	 * <i>native declaration : rpi_ws281x\gpio.h:83</i>
	 */
	void gpio_level_set(gpio_t gpio, byte pin, byte level);
	/**
	 * Original signature : <code>void gpio_output_set(volatile gpio_t*, uint8_t, uint8_t)</code><br>
	 * <i>native declaration : rpi_ws281x\gpio.h:98</i>
	 */
	void gpio_output_set(gpio_t gpio, byte pin, byte output);
	/**
	 * Original signature : <code>int pwm_pin_alt(int, int)</code><br>
	 * <i>native declaration : rpi_ws281x\pwm.h:119</i>
	 */
	int pwm_pin_alt(int chan, int pinnum);
	/**
	 * < Initialize buffers/hardware<br>
	 * Original signature : <code>int ws2811_init(ws2811_t*)</code><br>
	 * <i>native declaration : rpi_ws281x\ws2811.h:54</i>
	 */
	int ws2811_init(ws2811_t ws2811);
	/**
	 * < Tear it all down<br>
	 * Original signature : <code>void ws2811_fini(ws2811_t*)</code><br>
	 * <i>native declaration : rpi_ws281x\ws2811.h:55</i>
	 */
	void ws2811_fini(ws2811_t ws2811);
	/**
	 * < Send LEDs off to hardware<br>
	 * Original signature : <code>int ws2811_render(ws2811_t*)</code><br>
	 * <i>native declaration : rpi_ws281x\ws2811.h:56</i>
	 */
	int ws2811_render(ws2811_t ws2811);
	/**
	 * < Wait for DMA completion<br>
	 * Original signature : <code>int ws2811_wait(ws2811_t*)</code><br>
	 * <i>native declaration : rpi_ws281x\ws2811.h:57</i>
	 */
	int ws2811_wait(ws2811_t ws2811);
	public static class ws2811_device extends PointerType {
		public ws2811_device(Pointer address) {
			super(address);
		}
		public ws2811_device() {
			super();
		}
	};
}
