package com.github.h0ru5.neopixel;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : rpi_ws281x\dma.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class dma_cb_t extends Structure {
	public int ti;
	public int source_ad;
	public int dest_ad;
	public int txfr_len;
	public int stride;
	public int nextconbk;
	/** C type : uint32_t[2] */
	public int[] resvd_0x18 = new int[2];
	public dma_cb_t() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("ti", "source_ad", "dest_ad", "txfr_len", "stride", "nextconbk", "resvd_0x18");
	}
	/** @param resvd_0x18 C type : uint32_t[2] */
	public dma_cb_t(int ti, int source_ad, int dest_ad, int txfr_len, int stride, int nextconbk, int resvd_0x18[]) {
		super();
		this.ti = ti;
		this.source_ad = source_ad;
		this.dest_ad = dest_ad;
		this.txfr_len = txfr_len;
		this.stride = stride;
		this.nextconbk = nextconbk;
		if ((resvd_0x18.length != this.resvd_0x18.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.resvd_0x18 = resvd_0x18;
	}
	public static class ByReference extends dma_cb_t implements Structure.ByReference {
		
	};
	public static class ByValue extends dma_cb_t implements Structure.ByValue {
		
	};
}
