package com.github.h0ru5.neopixel;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : rpi_ws281x\ws2811.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class ws2811_channel_t extends Structure {
	/** < GPIO Pin with PWM alternate function, 0 if unused */
	public int gpionum;
	/** < Invert output signal */
	public int invert;
	/** < Number of LEDs, 0 if channel is unused */
	public int count;
	/** < Brightness value between 0 and 255 */
	public int brightness;
	/**
	 * < LED buffers, allocated by driver based on count<br>
	 * C type : ws2811_led_t[]*
	 */
	public Pointer leds;
	public ws2811_channel_t() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("gpionum", "invert", "count", "brightness", "leds");
	}
	/**
	 * @param gpionum < GPIO Pin with PWM alternate function, 0 if unused<br>
	 * @param invert < Invert output signal<br>
	 * @param count < Number of LEDs, 0 if channel is unused<br>
	 * @param brightness < Brightness value between 0 and 255<br>
	 * @param leds < LED buffers, allocated by driver based on count<br>
	 * C type : ws2811_led_t[]*
	 */
	public ws2811_channel_t(int gpionum, int invert, int count, int brightness, Pointer leds) {
		super();
		this.gpionum = gpionum;
		this.invert = invert;
		this.count = count;
		this.brightness = brightness;
		this.leds = leds;
	}
	public static class ByReference extends ws2811_channel_t implements Structure.ByReference {
		
	};
	public static class ByValue extends ws2811_channel_t implements Structure.ByValue {
		
	};
}
